name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - master

pr:
- master

pool:
  vmImage: 'windows-latest'

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  nExe: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\sn.exe'
  snExe64: 'C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe'
  ProductName: 'Microsoft.AspNetCore.OData.Authorization'
  ProductDir: $(Build.SourcesDirectory)\src\$(ProductName)
  TestDir: $(Build.SourcesDirectory)\test\$(ProductName).Tests
  ProductBinPath: '$(ProductDir)\bin\$(BuildConfiguration)'
  mainDll: '$(ProductName).dll'
  testDll: '$(ProductName).Tests.dll'
  skipComponentGovernanceDetection: true

steps:

- task: PoliCheck@1
  displayName: 'Run PoliCheck ".\src"'
  inputs:
    inputType: CmdLine
    cmdLineArgs: '/F:$(Build.SourcesDirectory)/src /T:9 /Sev:"1|2" /PE:2 /O:poli_result_src.xml'

- task: PoliCheck@1
  displayName: 'Run PoliCheck ".\test"'
  inputs:
    inputType: CmdLine
    cmdLineArgs: '/F:$(Build.SourcesDirectory)/test /T:9 /Sev:"1|2" /PE:2 /O:poli_result_test.xml'


# Install the nuget tooler.
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet >=5.2.0'
  inputs:
    versionSpec: '>=5.2.0'
    checkLatest: true

# Build the Product project
- task: DotNetCoreCLI@2
  displayName: 'build $(ProductName).csproj '
  inputs:
    projects: '$(ProductDir)\$(ProductName).csproj'
    arguments: '--configuration $(BuildConfiguration) --no-incremental'

# Build the Unit test project
- task: DotNetCoreCLI@2
  displayName: 'build $(ProductName) Unit test project'
  inputs:
    projects: '$(TestDir)\$(ProductName).Tests.csproj'
    arguments: '--configuration $(BuildConfiguration) --no-incremental'

# Run the Unit test
- task: DotNetCoreCLI@2
  displayName: 'Unit Tests ($(ProductName).Tests.csproj) '
  inputs:
    command: test
    projects: '$(TestDir)\$(ProductName).Tests.csproj'
    arguments: '--configuration $(BuildConfiguration) --no-build'

# CredScan
- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan - Src'
  inputs:
    toolMajorVersion: 'V2'
    scanFolder: '$(Build.SourcesDirectory)\src'
    debugMode: false

- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan - Test'
  inputs:
    toolMajorVersion: 'V2'
    scanFolder: '$(Build.SourcesDirectory)\test'
    debugMode: false